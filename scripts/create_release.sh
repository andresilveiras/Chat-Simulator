#!/bin/bash

# Habilitar modo rigoroso para tratamento de erros
set -euo pipefail

# Script para criar releases completos com tags Git

# Fun√ß√£o para tratamento de erros
error_handler() {
    echo "‚ùå Erro no script: $1"
    echo "üìç Linha: $2"
    exit 1
}

# Configurar trap para capturar erros
trap 'error_handler "Erro inesperado" $LINENO' ERR

echo "üöÄ Criando release completo..."

# Verificar se estamos no diret√≥rio correto
if [[ ! -f "pubspec.yaml" ]]; then
    error_handler "pubspec.yaml n√£o encontrado. Execute este script na raiz do projeto Flutter" $LINENO
fi

# Extrair vers√£o do pubspec.yaml
VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | tr -d ' ')
if [[ -z "$VERSION" ]]; then
    error_handler "N√£o foi poss√≠vel extrair a vers√£o do pubspec.yaml" $LINENO
fi

echo "üì¶ Vers√£o: $VERSION"

# Verificar se j√° existe uma tag para esta vers√£o
if git rev-parse --verify "v$VERSION" &> /dev/null; then
    echo "‚ö†Ô∏è  Tag v$VERSION j√° existe!"
    read -p "Deseja continuar mesmo assim? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Opera√ß√£o cancelada"
        exit 1
    fi
fi

# Verificar se h√° mudan√ßas n√£o commitadas
if [[ -n $(git status --porcelain) ]]; then
    echo "‚ö†Ô∏è  H√° mudan√ßas n√£o commitadas no reposit√≥rio"
    git status --short
    read -p "Deseja continuar mesmo assim? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Opera√ß√£o cancelada"
        exit 1
    fi
fi

# Gerar builds
echo "üî® Gerando builds..."
./scripts/build_release.sh

# Fazer commit das mudan√ßas se houver
if [[ -n $(git status --porcelain) ]]; then
    echo "üìù Fazendo commit das mudan√ßas..."
    git add .
    git commit -m "chore: prepare release v$VERSION"
fi

# Criar tag
echo "üè∑Ô∏è  Criando tag v$VERSION..."
git tag -a "v$VERSION" -m "Release v$VERSION"

echo "‚úÖ Release v$VERSION criado com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Push das mudan√ßas: git push origin main"
echo "2. Push da tag: git push origin v$VERSION"
echo "3. Criar release no GitHub com os arquivos em release/v$VERSION/" 